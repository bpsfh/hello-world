1.test for if I can connect to the github now.
2.test for if I can connect to the github now.
3.do works as below:
-----------------------------------------------------------------
  --fork by another user;
  --clone the original github repository:git@github.com:jie-zhang/hello-world.git(when I do this, it generate a remote branch "origin/master" and a local branch "master" automatically for me);
  --remote add another remote branch named "fork" from git@github.com:javatar/hello-world.git;
  --"checkout -b" to generate a new local branch named "hello-git"(change to the new branch
automatically). 
  --fetch from frok;
-----------------------------------------------------------------

4. do works as below:
-----------------------------------------------------------------
  --edit a file in branch "hello-git" and stage it and then commit;
  --checkout master to change to the master branch;
  --check the merge status and no-merged status;
  --change back to the hello-git branch and push to the remote repository. 
-----------------------------------------------------------------

5. do works as below:
-----------------------------------------------------------------
  --when I push the "hello-git" branch changes to the remote server "fork",
First time I use just "git push" for considering that the "hello-git" is
tracked branch of "fork", but it seems that <<<<it doesn't works>>>>.
  --then I tried "git push fork hello-git:master", it successed to push my
changes to the remote repository:git@github.com:javatar/hello-world.git.
  --and I will send a pull request to the "jie-zhang" server where I forked
the "hello-world" pj from (git@github.com:jie-zhang/hello-world.git.).
-----------------------------------------------------------------

6. do works as below:
-----------------------------------------------------------------
  --git checkout master
  --git branch --no-merged
      :hello-git
  --git merge hello-git
      Updating b92c169..d9ba622
      Fast-forward@@@@@@@@@@@@@@@@@@@@@@
       test.txt |   28 ++++++++++++++++++++++++++++
       1 files changed, 28 insertions(+), 0 deletions(-)
  --git log
      commit d9ba622e9e2acb10cffeda24640e81741fdb061a
      Author: javatar <neilsky@126.com>
      Date:   Thu Jan 16 19:34:20 2014 +0800

          In the branch "hello-git", I use the command "git push fork
hello-git:master
  --git status
      # On branch master
      # Your branch is ahead of 'origin/master' by 3 commits.@@@@@@@@@@@
      #
      nothing to commit (working directory clean)
  --git push
      Counting objects: 11, done.
      Delta compression using up to 4 threads.
      Compressing objects: 100% (9/9), done.
      Writing objects: 100% (9/9), 1.41 KiB, done.
      Total 9 (delta 5), reused 0 (delta 0)
      To git@github.com:jie-zhang/hello-world.git
         b92c169..d9ba622  master -> master
  --@@@@@@@@@@@@@@@
    when I check from the githum website, the main branch "jie-zhang" has
updated to the newest status with all the modification "javatar" have made.

7. so this time I want to test the "rebase" method.
-----------------------------------------------------------------
  --I have modified a file on the "master" branch and push it to remote server
"origin".
  --And now I have modified the same file, without fetch the newest file from
master.
  --Then I will commit it and push to the remote branch "fork", and do the
"rebase" in the branch "local-git".
  --Of Course I will meet a confiction, and it will be no problem to resolve
it.
<<<<<<< HEAD
  --@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  -- and it is the result:
	[jie-z@JIE-TOSHIBA hello-world]$ git checkout master
	Switched to branch 'master'
	[jie-z@JIE-TOSHIBA hello-world]$ git fetch
	[jie-z@JIE-TOSHIBA hello-world]$ git checkout hello-git
	Switched to branch 'hello-git'
	[jie-z@JIE-TOSHIBA hello-world]$ git rebase master
	First, rewinding head to replay your work on top of it...
	Applying: verify the "rebase" merge method.
	Using index info to reconstruct a base tree...
	Falling back to patching base and 3-way merge...
	Auto-merging test.txt
	CONFLICT (content): Merge conflict in test.txt
	Failed to merge in the changes.
	Patch failed at 0001 verify the "rebase" merge method.

	When you have resolved this problem run "git rebase --continue".
	If you would prefer to skip this patch, instead run "git rebase
--skip".
	To restore the original branch and stop rebasing run "git rebase
--abort".

	[jie-z@JIE-TOSHIBA hello-world]$ git status
	# Not currently on any branch.
	# Unmerged paths:
	#   (use "git reset HEAD <file>..." to unstage)
	#   (use "git add/rm <file>..." as appropriate to mark resolution)
	#
	#	both modified:      test.txt
	#
	no changes added to commit (use "git add" and/or "git commit -a")

  --@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
		[jie-z@JIE-TOSHIBA hello-world]$ git rebase --continue
		Applying: verify the "rebase" merge method.
		[jie-z@JIE-TOSHIBA hello-world]$ git status
		# On branch hello-git
		nothing to commit (working directory clean)
		[jie-z@JIE-TOSHIBA hello-world]$ git checkout master
		Switched to branch 'master'
		[jie-z@JIE-TOSHIBA hello-world]$ git rebase master
		Current branch master is up to date.
		[jie-z@JIE-TOSHIBA hello-world]$ git checkout master
		Already on 'master'
		[jie-z@JIE-TOSHIBA hello-world]$ git branch 
		  hello-git
		* master
		  show
		[jie-z@JIE-TOSHIBA hello-world]$ git branch --no-merged
		  hello-git
		[jie-z@JIE-TOSHIBA hello-world]$ git merge hello-git
		Updating 812397d..00be574
		Fast-forward
		 test.txt |   46
++++++++++++++++++++++++++++++++++++++++++++++
		 1 files changed, 46 insertions(+), 0 deletions(-)

-----------------------------------------------------------------

8. I met a problem when I tried to push the branch "fork".
-----------------------------------------------------------------
	[jie-z@JIE-TOSHIBA hello-world]$ git push fork hello-git:master
	To git@github.com:javatar/hello-world.git
	 ! [rejected]        hello-git -> master (non-fast-forward)
	error: failed to push some refs to 'git@github.com:javatar/hello-world.git'
	To prevent you from losing history, non-fast-forward updates were rejected
	Merge the remote changes before pushing again.  See the 'Note about
	fast-forwards' section of 'git push --help' for details.
	[jie-z@JIE-TOSHIBA hello-world]$ 
-----------------------------------------------------------------

